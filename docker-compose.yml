version: "3.9"

services:
  nodeapp_svc0:
    container_name: nodeapp_svc0
    image: nodeapp_svc0_img
    hostname: nodeapp_svc0
    build:
      context: .
    tty: true
    restart: "on-failure"
    volumes:
      - nodeapp_volume:/nodeapp
    ports:
      - "5000:${APP_PORT}"

  nodeapp_svc1:
    container_name: nodeapp_svc1
    image: nodeapp_svc1_img
    hostname: nodeapp_svc1
    build:
      context: .
    tty: true
    restart: "on-failure"
    volumes:
      - nodeapp_volume:/nodeapp
    ports:
      - "5001:${APP_PORT}"

  nodeapp_svc2:
    container_name: nodeapp_svc2
    image: nodeapp_svc2_img
    hostname: nodeapp_svc2
    build:
      context: .
    tty: true
    restart: "on-failure"
    volumes:
      - nodeapp_volume:/nodeapp
    ports:
      - "5002:${APP_PORT}"

  nodeapp_svc3:
    container_name: nodeapp_svc3
    image: nodeapp_svc3_img
    hostname: nodeapp_svc
    build:
      context: .
    tty: true
    restart: "on-failure"
    volumes:
      - nodeapp_volume:/nodeapp
    ports:
      - "5003:${APP_PORT}"

  nodeapp_svc4:
    container_name: nodeapp_svc4
    image: nodeapp_svc4_img
    hostname: nodeapp_svc4
    build:
      context: .
    tty: true
    restart: "on-failure"
    volumes:
      - nodeapp_volume:/nodeapp
    ports:
      - "5004:${APP_PORT}"

  nodeapp_svc_loadbalancer:
    container_name: nodeapp_svc_loadbalancer
    hostname: nodeapp_svc_loadbalancer
    image: nodeapp_svc_loadbalancer_img
    build: ./nginx
    tty: true
    links:
      - nodeapp_svc0
      - nodeapp_svc1
      - nodeapp_svc2
      - nodeapp_svc3
      - nodeapp_svc4
    ports:
      - "80:80"
      - "443:443"
    restart: "always"
    volumes:
      - nodeapp_nginx_volume:/nodeapp

volumes:
  nodeapp_volume:
  nodeapp_nginx_volume:
